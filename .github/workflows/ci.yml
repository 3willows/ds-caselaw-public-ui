name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: ["master", "main"]
    paths-ignore: ["docs/**"]

  push:
    branches: ["master", "main"]
    paths-ignore: ["docs/**"]

  merge_group:

jobs:
  build-scss:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up node
        uses: actions/setup-node@v4.0.2

      - name: Install node dependencies
        run: npm ci

      - name: Build scss
        run: npm run build

  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: |
            requirements/base.txt
            requirements/local.txt

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

  # With no caching at all the entire ci process takes 4m 30s to complete!
  pytest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Copy .env.example file
        uses: canastro/copy-file-action@master
        with:
          source: ".env.example"
          target: ".env"

      - name: Create docker network as used in dev
        run: docker network create caselaw

      - name: Build the Stack
        run: docker-compose build postgres django

      - name: Verify translations
        run: |
          docker-compose run --rm django script/makemessages
          script/verify-translations

      - name: Run DB Migrations
        run: docker-compose run --rm django python manage.py migrate --settings=config.settings.test

      - name: Run Django Translation Compiling
        run: docker-compose run --rm django python manage.py compilemessages

      - name: Run Django Tests with coverage
        run: docker-compose run django coverage run -m pytest -vvvv -rsa -m "not local"

      - name: Generate coverage XML
        run: docker-compose run django coverage xml

      - name: Run mypy
        run: docker-compose run django mypy ds_judgements_public_ui judgments

      - name: Setup django server for e2e tests
        run: docker-compose up -d

      - name: Set transactional licence form feature flag
        run: docker-compose exec -T django python manage.py waffle_flag interactive_licence_form --everyone --create

      - name: Install NPM deps
        run: npm install

      - name: Build the JS and SASS
        run: npm run build

      - name: Kick off the django server itself
        run: docker-compose exec -d django python manage.py runserver 0.0.0.0:3000
      - name: Build playwright runner container
        run: docker-compose build e2e_tests

      - name: Run playwright e2e tests
        run: docker-compose run e2e_tests pytest --base-url http://django:3000

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

      - name: Upload coverage to CodeClimate
        uses: paambaati/codeclimate-action@v5.0.0
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}

      - name: Tear down the Stack
        run: docker-compose down
